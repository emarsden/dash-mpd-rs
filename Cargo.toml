[package]
name = "dash-mpd"
version = "0.18.3"
authors = ["Eric Marsden <eric.marsden@risk-engineering.org>"]
description = "Parse, serialize, download an MPD manifest for MPEG-DASH or WebM-DASH media streaming"
readme = "README.md"
repository = "https://github.com/emarsden/dash-mpd-rs"
license = "MIT"
keywords = ["video", "streaming", "MPD", "DASH", "MPEG"]
categories = ["multimedia", "multimedia::video", "parser-implementations"]
publish = true
edition = "2021"

[dependencies]
base64 = "0.22.1"
base64-serde = "0.8.0"
byteorder = "1.5.0"
lazy_static = "1.5.0"
serde = { version = "1.0.219", features = ["derive"] }
serde_path_to_error = "0.1.17"
serde_ignored = { version = "0.1.12", optional = true }
serde_with = { version = "3.13.0", features = ["base64"] }
quick-xml = { version = "0.37.5", features = ["serialize", "overlapped-lists"] }
url = "2.5.4"
chrono = { version = "0.4.41", features = ["serde"] }
num-traits = "0.2.19"
iso8601 = "0.6.3"
regex = "1.11.1"
thiserror = "2.0.12"
fs-err = "3.1.1"
tracing = { version = "0.1.41", features = ["attributes"] }
data-url = { version = "0.3.1", optional = true }
bytes = "1.10.1"
reqwest = { version = "0.12.20", default-features = false, features = ["cookies"], optional = true }
tokio = { version = "1.45.1", features = ["rt-multi-thread", "time", "macros"], optional = true }
backoff = { version = "0.4.0", features = ["tokio"], optional = true }
governor = { version = "0.10.0", optional = true }
xot = { version = "0.31.2", optional = true }
tempfile = { version = "3.20.0", optional = true }
sanitise-file-name = { version = "1.0.0", optional = true }
colored = { version = "3.0.0", optional = true }
ac-ffmpeg = { version = "0.19.0", optional = true }
ffprobe = { version = "0.4.0", optional = true }
file-format = { version = "0.27.0", features = ["reader"], optional = true }
bstr = { version = "1.12.0", optional = true }
hex-literal = { version = "1.0.0", optional = true }
pssh-box = { version = "0.1.11", optional = true }
hxdmp = "0.2.1"
webm-iterable = "0.6.4"

[dev-dependencies]
sha2 = "0.10.9"
hex-literal = "1.0.0"
colored = "3.0.0"
indicatif = "0.17.11"
# We pin to this version because the latest versions require a bleeding edge Rust toolchain.
clap = "=4.4.18"
tokio = { version = "1.45.1", features = ["rt-multi-thread", "time", "macros"] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "time"] }
proptest = "1.7.0"
http = "1.3.1"
axum = "0.8.4"
axum-auth = "0.8.1"
hyper-serve = { version = "0.6.2" }
noxious-client = "1.0.4"
reqwest = { version = "0.12.20", default-features = false, features = ["cookies", "json", "blocking"] }
serde_json = "1.0.140"
anyhow = "1.0.98"
roxmltree = "0.20.0"
xmlem = "0.3.3"
json = "0.12.4"
mp4 = "0.14.0"
image = "0.25.6"
pretty_assertions = "1.4.1"
approx = "0.5.1"
assert_cmd = "2.0.17"

[features]
default = ["fetch", "native-tls", "compression", "socks", "scte35", "http2"]
fetch = ["data-url", "reqwest", "tokio", "backoff", "governor", "xot", "tempfile", "sanitise-file-name", "ffprobe", "file-format", "colored", "bstr", "hex-literal", "pssh-box"]
libav = ["ac-ffmpeg"]
scte35 = []
warn_ignored_elements = ["serde_ignored"]
compression = ["reqwest/gzip"]
socks = ["reqwest/socks"]
native-tls = ["reqwest/native-tls"]
rustls-tls = ["reqwest/rustls-tls"]
# the trust-dns feature is deprecated
trust-dns = ["reqwest/trust-dns"]
hickory-dns = ["reqwest/hickory-dns"]
http2 = ["reqwest/http2"]

[target.'cfg(unix)'.dependencies]
xattr = "1.5.0"
